CREATE DATABASE GESTION_ENTREPRISE;

CREATE TABLE CATEGORIES (
	CODE_CAT1 INT NOT NULL,
	DESC_CAT1 VARCHAR(50) NOT NULL,
	CODE_CAT2 INT NOT NULL,
	DESC_CAT2 VARCHAR(100) NOT NULL PRIMARY KEY);

CREATE TABLE ECHEANCE (
	CODE_ECHEANCE INT NOT NULL PRIMARY KEY,
	DESC_ECHEANCE VARCHAR(50));

CREATE TABLE FACTURES (
	ID_FACTURE INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	ID_FOURNISSEUR INT NOT NULL,
	MONTANT_HT DECIMAL(10,2),
	TVA DECIMAL(5,2),
	MONTANT_TTC DECIMAL(10,2),
	DATE_FACTURE DATE,
	DATE_ECHEANCE DATE,
	DATE_PAIEMENT DATE,
	CODE_STATUT INT, -- Saisi, à payer, etc
	CODE_TYPE INT NOT NULL, -- facture, avoir, prestation, etc
	CODE_MODE_PAIEMENT INT,
	GROUPE INT DEFAULT 0,
	COMMENTAIRES VARCHAR(255));

CREATE TABLE FOURNISSEURS (
	ID_FOURNISSEUR INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NOM_FOURNISSEUR VARCHAR(100) NOT NULL,
	ID_CATEGORIE INT,
	MODE_REGLEMENT INT,
	ECHEANCE INT,
	DESCRIPTION VARCHAR(255),
	ACTIF INT -- indique si le fournisseur est encore actif
);

CREATE TABLE MODE_PAIEMENT (
	CODE_PAIEMENT INT NOT NULL PRIMARY KEY,
	DESC_PAIEMENT VARCHAR(50));

CREATE TABLE NATURE_FACTURE ( -- Facture, avoir, prestation, etc
	CODE_NATURE INT NOT NULL PRIMARY KEY,
	DESC_NATURE VARCHAR(30)
);

CREATE TABLE STATUT_FACTURE ( -- Saisi, à régler, réglée
	CODE_STATUT INT NOT NULL PRIMARY KEY,
	DESC_STATUT VARCHAR(20)
);

CREATE TABLE REF_DATE(
	FULL_DATE DATE NOT NULL PRIMARY KEY,
	CIVIL_YEAR INT,
	ACCOUNTING_YEAR INT, 
	MONTH INT);

CREATE TABLE SALES (
	SALES_DATE INT NOT NULL,
	SALESREP_ID INT NOT NULL,
	CODE_TVA INT NOT NULL,
	SALES DECIMAL(10,2),
	MARGIN DECIMAL(10,2),
	SALES_COUNT INT,
	SALESREP_OBJ DECIMAL(5,3),
	PRIMARY KEY (SALES_DATE, SALESREP_ID, CODE_TVA)
);

CREATE TABLE TVA (
	CODE_TVA INT NOT NULL AUTO_INCREMENT PRIMARY KEY AUTO_INCREMENT,
	DESC_TVA VARCHAR(6),
	TAUX_TVA DECIMAL(5,3)
);

CREATE TABLE SALESDEPT (
	SALESREP_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	SALESREP VARCHAR(50),
	ACTIF BOOLEAN
);

CREATE VIEW OBJECTIFS AS 
SELECT SALES_DATE+10000 AS OBJ_SALES_DATE,
		CODE_TVA, SUM(SALES) AS OBJ_SALES, SALESREP_ID, SUM(MARGIN) AS OBJ_MARGIN, SUM(SALES_COUNT) AS OBJ_SALES_COUNT FROM SALES WHERE SALES_DATE<((YEAR(CURDATE())-1)*10000+MONTH(CURDATE())*100 + DAY(CURDATE())) GROUP BY SALES_DATE, CODE_TVA, SALESREP_ID;
 